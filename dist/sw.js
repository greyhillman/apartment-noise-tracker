const i="backend",o="v0.1.0",n=`${i}_${o}`;self.addEventListener("install",t=>{const e=async()=>{(await caches.open(n)).addAll([{"revision":null,"url":"assets/index-B0ohwJlY.css"},{"revision":null,"url":"assets/index-FgU1l8LS.js"},{"revision":null,"url":"assets/worker-B3boV-p5.js"},{"revision":"01eaf88d5c6c3f6b4f9965edf494be2c","url":"index.html"},{"revision":"37ad03a1b848875070902c963201320d","url":"registerSW.js"},{"revision":"434844e5ca9218f8956f4517f61d042b","url":"icons/pwa-192x192.png"},{"revision":"3ad759fe9bee0311ebbdfd8eb5fc099d","url":"icons/pwa-512x512.png"},{"revision":"6d599c9cba997edf9ed03b0e41bc93a0","url":"manifest.webmanifest"}])};t.waitUntil(e())});self.addEventListener("activate",t=>{const e=async()=>{const c=(await caches.keys()).filter(a=>a!==n).map(a=>caches.delete(a));await Promise.all(c),self.clients.claim()};t.waitUntil(e())});self.addEventListener("fetch",t=>{const e=t.request,s=async()=>{if(e.mode==="navigate"){const a=await caches.match("/");if(a)return a}const c=await caches.match(e);return c||await fetch(e)};t.respondWith(s())});
